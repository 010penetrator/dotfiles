#!/bin/bash

ME=plasmik
HOSTNAME=machine
EDITOR=vim
SELFNAME="$(basename $BASH_SOURCE)"
REALPATH="$(realpath $BASH_SOURCE)"

export applist1="gvim grub fuse2 dosfstools efibootmgr os-prober sudo xorg-server xorg-xinput xorg-xinit inetutils netctl iw iwd dialog openbox python-pip bspwm dunst thunar pavucontrol gparted speedcrunch firefox xterm kitty curl git earlyoom ncdu htop btop lolcat xclip redshift scrot lxappearance gitg xarchiver mediainfo audacity sox cuetools wavpack mac vorbis-tools nomacs zathura sxhkd xorg-apps terminus-font ttf-liberation ttf-dejavu noto-fonts ttf-fira-code man fzf pulseaudio ntfs-3g telegram-desktop transmission-cli nmap rsync lsb-release alsa-utils pulseaudio-alsa zathura-djvu zathura-pdf-mupdf unzip p7zip unrar stalonetray qemu virtualbox virtualbox-host-modules-arch smartmontools base-devel mlocate ranger vifm nnn fzf ncdu ripgrep tmux bc wmctrl xdotool nitrogen dmenu nemo mpv vlc ffmpeg feh eog imagemagick gpick fbreader evince testdisk weechat youtube-dl pop-gtk-theme papirus-icon-theme tree neovim python-pynvim picom gvfs-mtp fuse-zip "
export applist2="ardour blender amsynth hydrogen guitarix fluidsynth soundfont-fluid jack2 qjackctl midori mousepad "
export applistAUR="deadbeef inxi pakku woeusb tty-clock jdownloader2 tuxguitar virtualbox-ext-oracle gtick nerd-fonts-fira-code udevil hardinfo shntool "

stage1() {
echo "
Welcome to Stage 1 of my arch install script!

Use part, fdisk & mkfs to do disk partioning

Call 'mount XX /mnt'
"

[[ -d /sys/firmware/efi/efivars/ ]] && echo -e "EFI mode active\n" || echo "BIOS mode active"

bash --rcfile <(echo "PS1='subshell> '") -i

findmnt /mnt || { echo "Try to mount better!"; return; } 

echo "
Now set up Internet:
# ip link set dev XX up
# wpa_passphrase XX > THEPASSWORDFILE
# wpa_supplicant -B -i XX -c FILE
# or wifi-menu OR iwctl
# systemctl start iwd
"
bash --rcfile <(echo "PS1='subshell> '") -i

timedatectl set-ntp true
pacman -Syy
pacman -S archlinux-keyring
pacstrap /mnt base linux linux-firmware vi dhcpcd wpa_supplicant grub sudo
genfstab -U /mnt >> /mnt/etc/fstab

[[ -f $REALPATH ]] && cp "$REALPATH" /mnt/arin.sh
[ -f /mnt/arin.sh ] || echo Please copy the Arch installer script to /mnt/arin.sh
echo Call 'arch-chroot /mnt; source /arin.sh; stage2'
}

####################################

stage2() {
echo Welcome to Stage 2 of my arch install script!

echo Enter password for root
passwd
ln -sf /usr/share/zoneinfo/Europe/Moscow /etc/localtime
hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
echo "ru_RU.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" >> /etc/locale.conf

echo "$HOSTNAME" >> /etc/hostname
echo "127.0.0.1	localhost" >> /etc/hosts
echo "::1		localhost" >> /etc/hosts
echo "127.0.1.1	$HOSTNAME.localdomain	$HOSTNAME" >> /etc/hosts
vi /etc/hosts

mkinitcpio -P

groupadd sudo
EDITOR=vi visudo

useradd -m -s /bin/bash $ME
usermod -a -G sudo $ME
echo Enter password for user
passwd $ME

echo "
applist1:
$applist1
applist2:
$applist2
applistAUR:
$applistAUR

Call pacman to install those apps
"
export applist1="$applist1"; export applist2="$applist2"; export applistAUR="$applistAUR"
bash --rcfile <(echo "PS1='subshell> '") -i

echo "
Now maybe call that:
# usermod -a -G vboxusers $ME
# pacman -S efibootmgr amd-ucode
...And set up the bootloader!
"
bash --rcfile <(echo "PS1='subshell> '") -i

echo Cloning dotfiles..
runuser -l $ME -c 'git clone https://codeberg.org/plasmik/dotfiles /home/"$ME"/.dotfiles.git'
echo Now reboot or log in as user and call "bash .dotfiles.git/sh/bootstrap"
}

####################################

# stage3() {
# echo Welcome to Stage 3 of my arch install script!
# echo No commands in stage3!
# }

####################################

echo "You have imported the Arch install script so now call 'stage1' 'stage2' etc.."

