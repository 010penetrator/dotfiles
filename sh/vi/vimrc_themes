""""""""""""""""""""""""
""      Theming:      ""
""""""""""""""""""""""""
" vim: set foldmethod=marker
" vim: ts=4 sw=4 ft=vim
"
map <buffer> J j:call EvalThis()<CR>
map <buffer> K k:call EvalThis()<CR>
" bufdo unmap <buffer> M

let hostname = substitute(system('hostname'), '\n', '', '')
if !exists("g:phase")
    call SetPhase()
    if &diff
        " Colors for diff mode
        colo stellarized
        let g:phase = 'diffffff'
    endif
endif

if !exists("g:colors_name") || g:colors_name=='habamax'
    if !has('nvim')
        " Colors for Vim for day/night/default
        if ( g:phase=='day' )
            colo paper
        elseif ( g:phase=='nox' || g:phase=='dunno' )
            colo tempus_autumn
        endif
    else

        " Colors for Neovim for day/night/neutral

        if ( g:phase=='day' )
            colo catppuccin-latte
            " colo snow | set bg=light
            " colo Tomorrow | LineColor rusticated
            " colo stellarized | set bg=light | LineColor aqua_plasm

        elseif ( g:phase=='nox' )
            colo nordic
            " colo catppuccin-frappe
            " colo oh-lucy-evening
            " colo nightfox | set bg=dark
            " colo melange | set bg=dark
            " colo stellarized | set bg=dark | LineColor snow_dark
            " colo onehalfdark | LineColor one
            " colo tempus_dusk | set bg=dark | LineColor bluewery
            " colo stellarized | set bg=dark | LineColor terafox
            " colo tokyonight | LineColor nordfox
            " colo tokyonight | LineColor tokyonight
            " colo Tomorrow-Night-Eighties | LineColor snow_dark
            " elseif ( g:phase=='dunno' )

        else " neutral colors
            colo lost-shrine | LineColor nord
            " colo frign | LineColor aqua_plasm
            " colo Tomorrow-Night-Blue | LineColor bluewery
            " colo Tomorrow | LineColor Tomorrow
            " colo Tomorrow-Night | LineColor bluewery
            " colo bluewery-light | LineColor selenized_light
            " colo Tomorrow-Night-Eighties | LineColor snow_dark
            " colo edge | set bg=dark | LineColor darcula
            " colo cryslominsa | LineColor cryslominsa
            " colo stellarized | set bg=light | LineColor atlantis
            " elseif hostname=="warmPC" || hostname=="rpi4b" || hostname=="machine"
            " something else
        endif
    endif
endif

        " if !exists("g:vimplug_available")
        " Fallback Colors
        if ( !exists("g:colors_name") || g:colors_name == 'default' )
            colo delek
        endif
" " " {{{}}} " " "
" colo snow | set bg=light | LineColor ayu_light
" colo vadelma | set bg=light | LineColor one
" colo PaperColor | set bg=light | LineColor one
" colo edge | set bg=light | LineColor materia
" colo Tomorrow | LineColor Tomorrow
" colo Tomorrow-Night | set bg=light | LineColor bluewery
" colo corvine_light | LineColor selenized_light
" colo stellarized | set bg=light | LineColor PaperColor_light
" colo lost-shrine | LineColor nord
" colo knicks-away | LineColor bluewery
" colo cryslominsa | LineColor cryslominsa
" colo everforest | LineColor cryslominsa
" colo tempus_dusk | LineColor solarized
" let ayucolor="mirage" | colo ayu | LineColor ayu_mirage
" colo OceanicNext | LineColor bluewery
" colo stellarized | set bg=dark | LineColor bluewery
" colo Tomorrow-Night-Blue | LineColor bluewery
" colo edge | set bg=dark | LineColor darcula
" colo vadelma | set bg=dark | LineColor deus
" set notermguicolors | colo plastic | LineColor deus

" " " {{{}}} " " "
" LineColor ayu_light
" LineColor edge
" LineColor material
" LineColor one
" LineColor selenized_light
" LineColor selenized_dark
" LineColor PaperColor_light
" LineColor Tomorrow
" LineColor nord
" LineColor atlantis
" LineColor solarized
" LineColor bluewery
" LineColor darcula
" LineColor deus
" LineColor miramare
" LineColor apprentice
" LineColor terafox
" LineColor rusticated
" LineColor snow_dark
" LineColor snow_light

" hi! Search ctermbg=222
" hi! Normal ctermbg=234

"   List available lighline themes
" new | map <buffer> M j: LineColor <C-R><C-W><CR>| map <buffer> H k: LineColor <C-R><C-W><CR>| call ExPut('echo glob("$RTP/plugged/**/autoload/lightline/colorscheme/*.vim")') | %s/^\/.*\/// | %s/\.vim$// | goto 1 | del 1

"   List available colors..
" let c = getcompletion('', 'color') | new | put =c | goto 1 | map <buffer> J j:exec 'colo' getline(line('.'))<CR>| map <buffer> K k:exec 'colo' getline(line('.'))<CR>
