super + x ; { m, s, e, h, f, n, o, w, a, i }
  raise.sh { '' notimem, speedcrunch, 'WeeChat\|weechat' 'urxvt -e weechat', htop '$TERMINAL -e htop', feh 'feha /ln/dwn/', nautilus, VirtualBox '', fbreader, pavucontrol, histmpv.sh }

super + x ; { t, j, z, q, l, c, d, space }
  { raiseterm.sh, windowswitcher.sh, xdotool mousemove_relative 0 1600, bspc node -c, listdwn.sh, listmpv.sh, deadbeef, listdeadbeef.sh }

super + { q, S, t, v, s, p, c, r, R, g, a, A, b, z }
  raise.sh { '' scroff, '' 'systemctl suspend', 'xterm\|urxvt\|kitty', VIM 'vimz', 'chromium\|Firefox' '', Thunar thunar, VIFM '$TERMINAL -e vifm & notify-send new_VIFM', zathura listzathura.sh, evince, 'Telegram\|Pidgin' '', 'transmission-remote\|tremc\|qbittorrent' '$TERMINAL -e tremc -c localhost:9090', 'tremc-pi' '$TERMINAL -T tremc-pi -e tremc -c 192.168.1.78:9090', ' Browser' 'noti echo starting TorBro... ; exo-open .trb.desktop', FBReader }

super + { T, V, C, B }
  raisekitty.sh { bash, VIM, VIFM, MPV }

super + n ; { n, m, h, p, c, v, r }
  { $TERMINAL, momkitty.sh, zsh, thunar, $TERMINAL -e vifm, $TERMINAL -e vim, listzathura.sh }
super + e
  raiseterm.sh
super + d
  dmouse
super + f ; v
  xdotool mousemove_relative 0 1600
super + x ; x
  addlayout.sh ; sxd.sh ; notify-send "$(LC_ALL=C date; uptime -p)"
super + Q
  bspc node -c
super + x ; T
  notify-send "$(transmission-remote 192.168.1.78:9090 -st)"
super + space
  raise.sh 'deadbeef\|MPV\|mpv\|MOC' 'noti echo no player instance found'
ctrl + space
  (setxkbmap -query | grep -q "layout:\s\+us") && setxkbmap ru || setxkbmap us && notify-send "$( setxkbmap -query | grep layout | tr -s ' ' )" -t 600
super + Escape
  setxkbmap us
ctrl + 7
  xdotool getactivewindow windowminimize
alt + x
  dmouse
alt + e
  osdctl -s "$(date +%H:%M) $(setxkbmap -query | grep layout | cut -d ":" -f 2 | tr -d ', ') .$(bspc query -D -d focused --names) , "

# # i3 select desktop
# super + {1,2,3,4,5,6,7,8,9}
#   desk.sh {1,2,3,4,5,6,7,8,9}

# cycle same class windows
super + apostrophe
  raise.sh 0

# Adjust volume with pulseaudio
  # [ $(amixer sget Master | tail -1 | cut -d [ -f2 | cut -d % -f1) -gt 97 ] && amixer set Master 2%+ && notify-send 'Volume MAX' -t 500 || amixer set Master 2%+
alt + a
  [ $(amixer set Master 3%+ | tail -1 | cut -d [ -f2 | cut -d % -f1) -gt 99 ] && notify-send "Volume MAX" -t 400
alt + z
  amixer set Master 3%-
alt + q
  amixer set Master 100%
alt + s
  amixer set Master 0%

# bspwm hotkeys #

# quit/restart bspwm
super + alt + {q,r}
  bspc {quit,wm -r}

# close / kill
super + ctrl + q
  bspc node -k

# alternate between the tiled and monocle layout
super + m
  bspc desktop -l next

# send the newest marked node to the newest preselected node
super + f ; b
  bspc node newest.marked.local -n newest.automatic.local

# swap the current node and the biggest node
super + f ; w
  bspc node -s biggest.local

# set the window state
super + f ; {d,s,g,f}
  bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# create a receptacle node (placeholder)
super + f ; i
  bspc node -i

# send selected node to a receptacle node
super + f ; o
  bspc node -n 'any.leaf.!window' --follow

# rotate the split
super + ctrl + {r,R}
  bspc node -f @parent ; bspc node -R {90,-90} ; bspc node older.local -f
super + f ; r
  bspc node -f @parent ; bspc node -R {90,-90} ; bspc node older.local -f

# set the node flags
super + f ; {m,z,a,p}
  bspc node -g {marked,locked,sticky,private}

# focus/swap the node in the given direction
super + {_,shift + }{h,j,k,l}
  bspc node -{f,s} {west,south,north,east}

# swap with brother
super + f ; x
  bspc node -s @brother

# rotate node
super + alt + o
  bspc node -R 90

# focus the node for the given path jump
super + alt + {p,b,comma,period}
  bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }w
  bspc node -f {next,prev}.local
# super + e
#   bspc node -f prev.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
  bspc desktop -f {prev,next}.local
super + {comma,period}
  bspc desktop -f {prev,next}.local

# focus the last node/desktop
alt + Tab
  bspc desktop -f last
super + Tab
  bspc desktop -f last
super + BackSpace
  bspc node -f last

# focus the older or newer node in the focus history
super + {o,i}
  bspc wm -h off; \
  bspc node {older,newer} -f; \
  bspc wm -h on

# focus or move to the given desktop
super + {_,shift + }{1-9,0}
  bspc {desktop -f,node -d} '^{1-9,10}'

super + alt + bracket{left,right}
  bspc node -d {prev,next}.local

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
  bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
  bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + c
  bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + minus
  bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
  bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + {y,u,i,o}
  bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
  bspc node -v {-20 0,0 20,0 -20,20 0}

